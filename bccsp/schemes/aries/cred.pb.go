// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bccsp/schemes/aries/cred.proto

package aries

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Credential specifies a credential object
type Credential struct {
	Cred                 []byte   `protobuf:"bytes,1,opt,name=cred,proto3" json:"cred,omitempty"`
	Attrs                [][]byte `protobuf:"bytes,2,rep,name=attrs,proto3" json:"attrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Credential) Reset()         { *m = Credential{} }
func (m *Credential) String() string { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()    {}
func (*Credential) Descriptor() ([]byte, []int) {
	return fileDescriptor_57701eac61520cf0, []int{0}
}

func (m *Credential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credential.Unmarshal(m, b)
}
func (m *Credential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credential.Marshal(b, m, deterministic)
}
func (m *Credential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credential.Merge(m, src)
}
func (m *Credential) XXX_Size() int {
	return xxx_messageInfo_Credential.Size(m)
}
func (m *Credential) XXX_DiscardUnknown() {
	xxx_messageInfo_Credential.DiscardUnknown(m)
}

var xxx_messageInfo_Credential proto.InternalMessageInfo

func (m *Credential) GetCred() []byte {
	if m != nil {
		return m.Cred
	}
	return nil
}

func (m *Credential) GetAttrs() [][]byte {
	if m != nil {
		return m.Attrs
	}
	return nil
}

// Signature is a PoK of a BBS+ signature (a credential)
type Signature struct {
	MainSignature        []byte              `protobuf:"bytes,1,opt,name=main_signature,json=mainSignature,proto3" json:"main_signature,omitempty"`
	Nonce                []byte              `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Nym                  []byte              `protobuf:"bytes,3,opt,name=nym,proto3" json:"nym,omitempty"`
	NymProof             []byte              `protobuf:"bytes,4,opt,name=nym_proof,json=nymProof,proto3" json:"nym_proof,omitempty"`
	NymEid               []byte              `protobuf:"bytes,5,opt,name=nym_eid,json=nymEid,proto3" json:"nym_eid,omitempty"`
	NymEidProof          []byte              `protobuf:"bytes,6,opt,name=nym_eid_proof,json=nymEidProof,proto3" json:"nym_eid_proof,omitempty"`
	NymEidIdx            int32               `protobuf:"varint,7,opt,name=nym_eid_idx,json=nymEidIdx,proto3" json:"nym_eid_idx,omitempty"`
	NymRh                []byte              `protobuf:"bytes,8,opt,name=nym_rh,json=nymRh,proto3" json:"nym_rh,omitempty"`
	NymRhProof           []byte              `protobuf:"bytes,9,opt,name=nym_rh_proof,json=nymRhProof,proto3" json:"nym_rh_proof,omitempty"`
	NymRhIdx             int32               `protobuf:"varint,10,opt,name=nym_rh_idx,json=nymRhIdx,proto3" json:"nym_rh_idx,omitempty"`
	RevocationEpochPk    []byte              `protobuf:"bytes,11,opt,name=revocation_epoch_pk,json=revocationEpochPk,proto3" json:"revocation_epoch_pk,omitempty"`
	RevocationPkSig      []byte              `protobuf:"bytes,12,opt,name=revocation_pk_sig,json=revocationPkSig,proto3" json:"revocation_pk_sig,omitempty"`
	Epoch                int64               `protobuf:"varint,13,opt,name=epoch,proto3" json:"epoch,omitempty"`
	NonRevocationProof   *NonRevocationProof `protobuf:"bytes,14,opt,name=non_revocation_proof,json=nonRevocationProof,proto3" json:"non_revocation_proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_57701eac61520cf0, []int{1}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetMainSignature() []byte {
	if m != nil {
		return m.MainSignature
	}
	return nil
}

func (m *Signature) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *Signature) GetNym() []byte {
	if m != nil {
		return m.Nym
	}
	return nil
}

func (m *Signature) GetNymProof() []byte {
	if m != nil {
		return m.NymProof
	}
	return nil
}

func (m *Signature) GetNymEid() []byte {
	if m != nil {
		return m.NymEid
	}
	return nil
}

func (m *Signature) GetNymEidProof() []byte {
	if m != nil {
		return m.NymEidProof
	}
	return nil
}

func (m *Signature) GetNymEidIdx() int32 {
	if m != nil {
		return m.NymEidIdx
	}
	return 0
}

func (m *Signature) GetNymRh() []byte {
	if m != nil {
		return m.NymRh
	}
	return nil
}

func (m *Signature) GetNymRhProof() []byte {
	if m != nil {
		return m.NymRhProof
	}
	return nil
}

func (m *Signature) GetNymRhIdx() int32 {
	if m != nil {
		return m.NymRhIdx
	}
	return 0
}

func (m *Signature) GetRevocationEpochPk() []byte {
	if m != nil {
		return m.RevocationEpochPk
	}
	return nil
}

func (m *Signature) GetRevocationPkSig() []byte {
	if m != nil {
		return m.RevocationPkSig
	}
	return nil
}

func (m *Signature) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *Signature) GetNonRevocationProof() *NonRevocationProof {
	if m != nil {
		return m.NonRevocationProof
	}
	return nil
}

// NonRevocationProof contains proof that the credential is not revoked
type NonRevocationProof struct {
	RevocationAlg        int32    `protobuf:"varint,1,opt,name=revocation_alg,json=revocationAlg,proto3" json:"revocation_alg,omitempty"`
	NonRevocationProof   []byte   `protobuf:"bytes,2,opt,name=non_revocation_proof,json=nonRevocationProof,proto3" json:"non_revocation_proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NonRevocationProof) Reset()         { *m = NonRevocationProof{} }
func (m *NonRevocationProof) String() string { return proto.CompactTextString(m) }
func (*NonRevocationProof) ProtoMessage()    {}
func (*NonRevocationProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_57701eac61520cf0, []int{2}
}

func (m *NonRevocationProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonRevocationProof.Unmarshal(m, b)
}
func (m *NonRevocationProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonRevocationProof.Marshal(b, m, deterministic)
}
func (m *NonRevocationProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonRevocationProof.Merge(m, src)
}
func (m *NonRevocationProof) XXX_Size() int {
	return xxx_messageInfo_NonRevocationProof.Size(m)
}
func (m *NonRevocationProof) XXX_DiscardUnknown() {
	xxx_messageInfo_NonRevocationProof.DiscardUnknown(m)
}

var xxx_messageInfo_NonRevocationProof proto.InternalMessageInfo

func (m *NonRevocationProof) GetRevocationAlg() int32 {
	if m != nil {
		return m.RevocationAlg
	}
	return 0
}

func (m *NonRevocationProof) GetNonRevocationProof() []byte {
	if m != nil {
		return m.NonRevocationProof
	}
	return nil
}

type CredentialRevocationInformation struct {
	// epoch contains the epoch (time window) in which this CRI is valid
	Epoch int64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// epoch_pk is the public key that is used by the revocation authority in this epoch
	EpochPk []byte `protobuf:"bytes,2,opt,name=epoch_pk,json=epochPk,proto3" json:"epoch_pk,omitempty"`
	// epoch_pk_sig is a signature on the EpochPK valid under the revocation authority's long term key
	EpochPkSig []byte `protobuf:"bytes,3,opt,name=epoch_pk_sig,json=epochPkSig,proto3" json:"epoch_pk_sig,omitempty"`
	// revocation_alg denotes which revocation algorithm is used
	RevocationAlg int32 `protobuf:"varint,4,opt,name=revocation_alg,json=revocationAlg,proto3" json:"revocation_alg,omitempty"`
	// revocation_data contains data specific to the revocation algorithm used
	RevocationData       []byte   `protobuf:"bytes,5,opt,name=revocation_data,json=revocationData,proto3" json:"revocation_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CredentialRevocationInformation) Reset()         { *m = CredentialRevocationInformation{} }
func (m *CredentialRevocationInformation) String() string { return proto.CompactTextString(m) }
func (*CredentialRevocationInformation) ProtoMessage()    {}
func (*CredentialRevocationInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_57701eac61520cf0, []int{3}
}

func (m *CredentialRevocationInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CredentialRevocationInformation.Unmarshal(m, b)
}
func (m *CredentialRevocationInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CredentialRevocationInformation.Marshal(b, m, deterministic)
}
func (m *CredentialRevocationInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CredentialRevocationInformation.Merge(m, src)
}
func (m *CredentialRevocationInformation) XXX_Size() int {
	return xxx_messageInfo_CredentialRevocationInformation.Size(m)
}
func (m *CredentialRevocationInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_CredentialRevocationInformation.DiscardUnknown(m)
}

var xxx_messageInfo_CredentialRevocationInformation proto.InternalMessageInfo

func (m *CredentialRevocationInformation) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *CredentialRevocationInformation) GetEpochPk() []byte {
	if m != nil {
		return m.EpochPk
	}
	return nil
}

func (m *CredentialRevocationInformation) GetEpochPkSig() []byte {
	if m != nil {
		return m.EpochPkSig
	}
	return nil
}

func (m *CredentialRevocationInformation) GetRevocationAlg() int32 {
	if m != nil {
		return m.RevocationAlg
	}
	return 0
}

func (m *CredentialRevocationInformation) GetRevocationData() []byte {
	if m != nil {
		return m.RevocationData
	}
	return nil
}

func init() {
	proto.RegisterType((*Credential)(nil), "aries.Credential")
	proto.RegisterType((*Signature)(nil), "aries.Signature")
	proto.RegisterType((*NonRevocationProof)(nil), "aries.NonRevocationProof")
	proto.RegisterType((*CredentialRevocationInformation)(nil), "aries.CredentialRevocationInformation")
}

func init() { proto.RegisterFile("bccsp/schemes/aries/cred.proto", fileDescriptor_57701eac61520cf0) }

var fileDescriptor_57701eac61520cf0 = []byte{
	// 541 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0x49, 0xb3, 0xd9, 0x36, 0xa7, 0xed, 0xea, 0x8e, 0x15, 0x67, 0x51, 0xd6, 0x50, 0x10,
	0xab, 0x17, 0x8d, 0x28, 0x78, 0xdf, 0xea, 0x22, 0x45, 0x56, 0x42, 0xf6, 0x66, 0x11, 0x21, 0x4c,
	0x93, 0xd9, 0x76, 0x68, 0x67, 0x26, 0x24, 0xa9, 0xb4, 0xaf, 0xe3, 0xa5, 0xcf, 0xe1, 0x95, 0x8f,
	0xe1, 0xe5, 0x3e, 0x85, 0xcc, 0x9f, 0x9a, 0x40, 0xeb, 0x55, 0xe6, 0x7c, 0xbf, 0x33, 0x5f, 0xe6,
	0x9c, 0x39, 0x03, 0x97, 0xf3, 0x34, 0x2d, 0xf3, 0xb0, 0x4c, 0x97, 0x94, 0xd3, 0x32, 0x24, 0x05,
	0xa3, 0x65, 0x98, 0x16, 0x34, 0x1b, 0xe7, 0x85, 0xac, 0x24, 0xf2, 0xb4, 0x32, 0x7c, 0x0f, 0xf0,
	0xa1, 0xa0, 0x19, 0x15, 0x15, 0x23, 0x6b, 0x84, 0xe0, 0x44, 0xa5, 0x60, 0x27, 0x70, 0x46, 0xbd,
	0x58, 0xaf, 0xd1, 0x00, 0x3c, 0x52, 0x55, 0x45, 0x89, 0x5b, 0x81, 0x3b, 0xea, 0xc5, 0x26, 0x18,
	0xde, 0xbb, 0xe0, 0xdf, 0xb0, 0x85, 0x20, 0xd5, 0xa6, 0xa0, 0xe8, 0x05, 0x9c, 0x71, 0xc2, 0x44,
	0x52, 0xee, 0x15, 0xeb, 0xd0, 0x57, 0x6a, 0x9d, 0x36, 0x00, 0x4f, 0x48, 0x91, 0x52, 0xdc, 0xd2,
	0xd4, 0x04, 0xe8, 0x21, 0xb8, 0x62, 0xc7, 0xb1, 0xab, 0x35, 0xb5, 0x44, 0x4f, 0xc1, 0x17, 0x3b,
	0x9e, 0xe4, 0x85, 0x94, 0x77, 0xf8, 0x44, 0xeb, 0x1d, 0xb1, 0xe3, 0x91, 0x8a, 0xd1, 0x13, 0x68,
	0x2b, 0x48, 0x59, 0x86, 0x3d, 0x8d, 0x4e, 0xc5, 0x8e, 0x5f, 0xb1, 0x0c, 0x0d, 0xa1, 0x6f, 0x81,
	0xdd, 0x79, 0xaa, 0x71, 0xd7, 0x60, 0xb3, 0xf9, 0x12, 0xba, 0xfb, 0x1c, 0x96, 0x6d, 0x71, 0x3b,
	0x70, 0x46, 0x5e, 0xec, 0x9b, 0x8c, 0x59, 0xb6, 0x45, 0x8f, 0x41, 0xb9, 0x25, 0xc5, 0x12, 0x77,
	0xec, 0x11, 0x77, 0x3c, 0x5e, 0xa2, 0x00, 0x7a, 0x46, 0xb6, 0xce, 0xbe, 0x86, 0xa0, 0xa1, 0x31,
	0x7e, 0x06, 0x60, 0x33, 0x94, 0x2f, 0x68, 0xdf, 0x8e, 0xe6, 0xca, 0x76, 0x0c, 0x8f, 0x0a, 0xfa,
	0x5d, 0xa6, 0xa4, 0x62, 0x52, 0x24, 0x34, 0x97, 0xe9, 0x32, 0xc9, 0x57, 0xb8, 0xab, 0x6d, 0xce,
	0x6b, 0x74, 0xa5, 0x48, 0xb4, 0x42, 0xaf, 0xa1, 0x21, 0x26, 0xf9, 0x4a, 0x35, 0x16, 0xf7, 0x74,
	0xf6, 0x83, 0x1a, 0x44, 0xab, 0x1b, 0xb6, 0x50, 0x4d, 0xd5, 0x86, 0xb8, 0x1f, 0x38, 0x23, 0x37,
	0x36, 0x01, 0xfa, 0x0c, 0x03, 0x21, 0x45, 0xd2, 0x74, 0xd1, 0x27, 0x3f, 0x0b, 0x9c, 0x51, 0xf7,
	0xed, 0xc5, 0x58, 0xdf, 0xfe, 0xf8, 0x8b, 0x14, 0x71, 0x6d, 0xa7, 0x12, 0x62, 0x24, 0x0e, 0xb4,
	0x21, 0x07, 0x74, 0x98, 0xa9, 0x2e, 0xbd, 0x61, 0x4f, 0xd6, 0x0b, 0x7d, 0xe9, 0x5e, 0xdc, 0xaf,
	0xd5, 0xc9, 0x7a, 0x81, 0xde, 0xfc, 0xe7, 0x24, 0x66, 0x06, 0x8e, 0xfd, 0xee, 0x97, 0x03, 0xcf,
	0xeb, 0xa1, 0xac, 0xe9, 0x4c, 0xdc, 0xc9, 0x82, 0xeb, 0x65, 0x5d, 0xb5, 0xd3, 0xac, 0xfa, 0x02,
	0x3a, 0xff, 0x9a, 0x6b, 0xfc, 0xdb, 0xd4, 0xb6, 0x34, 0x80, 0xde, 0x1e, 0xe9, 0x6e, 0x9a, 0x71,
	0x03, 0x8b, 0x55, 0x23, 0x0f, 0xeb, 0x39, 0x39, 0x56, 0xcf, 0x4b, 0x68, 0x5c, 0x41, 0x92, 0x91,
	0x8a, 0xd8, 0x39, 0x6c, 0xec, 0xfe, 0x48, 0x2a, 0x32, 0xdd, 0x80, 0x9f, 0x4a, 0x6e, 0x3a, 0x3d,
	0xf5, 0x55, 0x41, 0x91, 0x7a, 0x79, 0x91, 0xf3, 0xf5, 0xd5, 0x82, 0x55, 0xcb, 0xcd, 0x7c, 0x9c,
	0x4a, 0x1e, 0xce, 0xa6, 0xd7, 0x21, 0xcb, 0x28, 0x67, 0xdb, 0xf0, 0xc8, 0x8b, 0xfd, 0xd1, 0x72,
	0x27, 0xb7, 0xb7, 0x3f, 0x5b, 0xde, 0x44, 0x45, 0xbf, 0xed, 0xf7, 0x4f, 0xeb, 0x5c, 0x7f, 0xbf,
	0x7d, 0x8a, 0xa6, 0xd7, 0xb4, 0x22, 0xea, 0x10, 0xf7, 0x96, 0xcd, 0x4f, 0xf5, 0xfb, 0x7e, 0xf7,
	0x37, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xb1, 0xa2, 0x3e, 0x01, 0x04, 0x00, 0x00,
}
